@model SchoolWork.Models.ClassNoteModule
@{
    ViewBag.Title = "SchoolNoticeAdd";
}
<h2>SchoolNoticeAdd</h2>
<html lang="en">
<head>
    <meta charset="utf-8">

    <meta name="viewport" content="width=device-width, initial-scale=1">
    @*<script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
        <script src="http://maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>*@

    <link href="~/CSS/stylesheet2.css" rel="stylesheet" />
    <style>
        .text-danger {
            font-weight: 700;
            color: red;
        }
    </style>

</head>
<body id="LoginForm" style="background-color:cadetblue">
    <div class="container">
        <h1 class="form-heading"></h1>
        <br />
        <br />
        <br />
        <br />
        <br />
        <div class="login-form">
            <div class="body-div" style="background-color:blanchedalmond; border:2px double light-green; max-width:100%">

                <h1 style="color:blueviolet; margin-top:-30px"><b>CLASS NOTES</b></h1>
                <br />
                <br />

                @if (Session["School_Name"] != null)
                {<p style="font-size:20px;text-align:center">
                     @*   Hi <b style="font-size:20px;color:darkcyan"> @Session["Employee_Name"] </b>*@
                    </p>
                    @*<h1>Hi  @Session["School_Code"] </h1><h1>Hi  @Session["School_Id"] </h1>*@
                }

                @if (TempData["msg"] != null)
                {
                    <p class="alert alert-success" id="successMessage" style="color:orangered">@TempData["msg"]</p>
                }
                <br>




                @using (Html.BeginForm())
                {

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                    <div class="input-group">

                        @Html.EditorFor(model => model.School_Id, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @onkeydown = "return false", @Value = Session["School_Id"] } })

                    </div>
                    @Html.ValidationMessageFor(model => model.School_Id, "", new { @class = "text-danger" })

                    <div class="input-group">

                        @Html.EditorFor(model => model.Employee_Id, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @onkeydown = "return false", @Value = Session["Employee_Id"] } })

                    </div>
                    @Html.ValidationMessageFor(model => model.Employee_Id, "", new { @class = "text-danger" })

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="input-group">

                                <span class="input-group-addon"><i class="glyphicon glyphicon-barcode"></i></span>
                                @Html.EditorFor(model => model.School_Code, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return false", @Value = Session["School_Code"] } })
                            </div>

                            @Html.ValidationMessageFor(model => model.School_Code, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-sm-6">
                            <div class="input-group">

                                <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                                @Html.EditorFor(model => model.School_Name, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return false", @Value = Session["School_Name"] } })
                            </div>

                            @Html.ValidationMessageFor(model => model.School_Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="input-group">

                                <span class="input-group-addon"><i class="glyphicon glyphicon-education"></i></span>
                                @Html.DropDownListFor(m => m.Class_Id, Model.Class_Name, "Please select An Class", new { @class = "form-control" })

                            </div>

                            @Html.ValidationMessageFor(m => m.Class_Id, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-sm-6">
                            <div class="input-group">

                                <span class="input-group-addon"><i class="glyphicon glyphicon-education"></i></span>
                                @Html.DropDownListFor(m => m.Section_Id, Model.Section_Name, "Please select An Section", new { @class = "form-control" })

                            </div>

                            @Html.ValidationMessageFor(m => m.Section_Id, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="row">
                        <div class="col-sm-4">
                            <div class="input-group">

                                <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                                @Html.EditorFor(model => model.Note_Date, new { htmlAttributes = new { @class = "form-control Note_Date", @Placeholder = "Enter Class Note Published  Date" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.Note_Date, "", new { @class = "text-danger" })

                        </div>


                        <div class="col-sm-4">
                            <div class="input-group">

                                <span class="input-group-addon"><i class="glyphicon glyphicon-education"></i></span>
                                @Html.DropDownListFor(m => m.Note_Type_Id, Model.Note_Type_Name, "Please select Note Type", new { @class = "form-control" })

                            </div>

                            @*@Html.ValidationMessageFor(m => m.Note_Type_Id, "", new { @class = "text-danger" })*@

                        </div>


                        <div class="col-sm-4">
                            <div class="input-group">

                                <span class="input-group-addon"><i class="glyphicon glyphicon-education"></i></span>
                                @Html.DropDownListFor(m => m.Subject_Id, Model.Subject_Name, "Please select An Subject", new { @class = "form-control" })

                            </div>

                            @Html.ValidationMessageFor(m => m.Subject_Id, "", new { @class = "text-danger" })

                        </div>



                    </div>


                    <div class="row">
                        <div class="col-sm-6">
                            <div class="input-group">

                                <span class="input-group-addon"><i class="glyphicon glyphicon-barcode"></i></span>
                                @Html.EditorFor(model => model.Topic_Name, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Enter Class Note  Topic Name Here" } })

                            </div>
                            @Html.ValidationMessageFor(model => model.Topic_Name, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-6">
                            <div class="input-group">

                                <span class="input-group-addon"><i class="glyphicon glyphicon-barcode"></i></span>
                                @Html.EditorFor(model => model.Note_Description, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Enter Class Note  Topic Description Here" } })

                            </div>
                            @Html.ValidationMessageFor(model => model.Note_Description, "", new { @class = "text-danger" })
                        </div>

                    </div>



                    <br>

                    <div class="form-group">

                        <input type="submit" value="Submit" class="btn btn-success" />
                        &nbsp;&nbsp;
                        <input type="reset" value="Reset" class="btn btn-warning">
                        &nbsp;&nbsp;

                       @* <input type="button" value="Return" class="btn btn-danger" onclick="@("window.location.href= '"+@ViewBag.PreviousUrl+"' ");" />*@

                        <input type="button" value="Home" class="btn btn-success" onclick="@("window.location.href='" + @Url.Action("EmployeeHeaderBoard", "DashBoard") + "'");" />

                        <input type="button" onclick="history.go(-1)" value="Return" class="btn btn-success" />


                    </div>


                }
            </div>
        </div>
    </div>
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    @section Scripts
    {
        @Scripts.Render("~/bundles/jqueryval")
        @Styles.Render("~/Content/cssjqryUi")

        <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
        <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
        <script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
        <script src="http://maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>

        <script type="text/javascript" src="Scripts/jquery_calendar/jquery-ui.js"></script>
        <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
        <script>


            $(function () {
                $(".Note_Date").datepicker(
                    {
                        dateFormat: 'dd/mm/yy',
                        showStatus: true,
                        showWeeks: true,
                        highlightWeek: true,
                        numberOfMonths: 1,
                        showAnim: "scale",
                        showOptions: { origin: ["top", "left"] }
                    }
                );
            });
        </script>
    }
</body>
</html>
