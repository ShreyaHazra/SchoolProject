@model SchoolWork.Models.StudentRegistration
<br />
<br />
<br />
<br />
<br />
<html>
<head>

</head>
<body>

@if (Session["Student_Email"] == null || Convert.ToString(Session["Student_Email"]) == "")
{

    using (Html.BeginForm("StudentRegistrationForm", "StudentDetail", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        // @Html.AntiForgeryToken()


        <div class="form-horizontal">
            <h4>Student Details</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Student_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Student_Id, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return false", @Value = Session["Student_Id"] } })
                    @Html.ValidationMessageFor(model => model.Student_Id, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Application_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Application_Id, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return false", @Value = Session["Application_Id"] } })
                    @Html.ValidationMessageFor(model => model.Application_Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.School_Code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.School_Code, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return false", @Value = Session["School_Code"] } })
                    @Html.ValidationMessageFor(model => model.School_Code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return false", @Value = Session["FullName"] } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return false", @Value = Session["FatherName"] } })
                    @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FatherContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FatherContactNumber, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return false", @Value = Session["FatherContactNumber"] } })
                    @Html.ValidationMessageFor(model => model.FatherContactNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FatherEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FatherEmail, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return false", @Value = Session["FatherEmail"] } })
                    @Html.ValidationMessageFor(model => model.FatherEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return false", @Value = Session["MotherName"] } })
                    @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MotherContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MotherContactNumber, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return false", @Value = Session["MotherContactNumber"] } })
                    @Html.ValidationMessageFor(model => model.MotherContactNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MotherEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MotherEmail, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return false", @Value = Session["MotherEmail"] } })
                    @Html.ValidationMessageFor(model => model.MotherEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @onkeydown = "return false", @Value = Session["DOB"] } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HomeContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HomeContactNumber, new { htmlAttributes = new { @class = "form-control", @Value = Session["HomeContactNumber"] } })
                    @Html.ValidationMessageFor(model => model.HomeContactNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HomeContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HomeContactNumber, new { htmlAttributes = new { @class = "form-control", @Value = Session["HomeContactNumber"] } })
                    @Html.ValidationMessageFor(model => model.HomeContactNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Student_Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Student_Email, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Enter Your  Email", @Value = Session["Student_Email"] } })
                    @Html.ValidationMessageFor(model => model.Student_Email, "", new { @class = "text-danger" })
                    <p id="Status" />
                </div>
            </div>

            <div class="form-group">
                ,
                @Html.LabelFor(model => model.Student_ConEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Student_ConEmail, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Enter Your Confirm Email", @Value = Session["Student_Email"] } })
                    @Html.ValidationMessageFor(model => model.Student_ConEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Enter Your Password", @type = "password", @Value = Session["Password"] } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConPassword, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Enter Your Confim Password", @type = "Text", @Value = Session["Password"] } })
                    @Html.ValidationMessageFor(model => model.ConPassword, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}


else
{

    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-12">

                <p style="font-size:20px;text-align:center;color:#EF8963;-webkit-text-stroke:1px black;">
                    <b style="color:#7BD626;">You Are  Registred Already!</b><br />
                    <b>Your User-Id is</b><b style="font-size:20px;color:darkcyan;-webkit-text-stroke: 1px black;"> @Session["Student_Email"] </b><b>& Password is</b>
                </p>

                <br />
                <br />

                <p style="font-size:20px;text-align:center;color:#EF8963;">
                    <input type="button" value="Click Here To Login" class="btn btn-success" onclick="location.href='@Url.Action("StudentLogin", "StudentDetail")'" />
                </p>
            </div>
            @*@Html.ActionLink("Assign WorkRole", "StudentLogin", new { }, new { @class = "btn btn-success btn-sm btn-block", @type = "button" })*@
        </div>

    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

</body>
</html>

<script type="text/javascript">
        $('#Student_Email').change(function () {
      // alert("hi");
       $("#Status").html("Checking...");
       $.post("@Url.Action("CheckUsernameAvailability", "StudentDetail")",
           {
               Student_Email: $("#Student_Email").val(),
               School_Code: $("#School_Code").val()


           },
           function (data) {
               if (data == 0) {
                //  alert(School_Code);
                   $("#Status").html('<font color="Green">Available !. you can take it.</font>');
                   $("#Student_Email").css("border-color", "Green");

               }
               else {
                //   alert(School_Code);
                   $("#Status").html('<font color="Red">That name is taken.Try Another.</font>');
                   $("#Student_Email").css("border-color", "Red");
               }
           });
   });
</script>