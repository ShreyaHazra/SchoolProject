@model SchoolWork.Models.StudentAdmission

@{
    ViewBag.Title = "StudentFormFillup";
}


<h2>StudentFormFillup</h2>


<html lang="en">
<head>
    <meta charset="utf-8">
    <!-- This file has been downloaded from Bootsnipp.com. Enjoy! -->
    <title>STUDENT ADMISSION FORM</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
    <link href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
    <link href="~/CSS/stylesheet1.css" rel="stylesheet" />

    <style>
        * {
            box-sizing: border-box
        }

        body {
            font-family: "Lato", sans-serif;
            overflow-x: hidden;
        }

        /* Style the tab */
        .tab {
            float: left;
            border: 1px solid #ccc;
            background-color: #f1f1f1;
            width: 15%;
            height: auto;
        }

            /* Style the buttons inside the tab */
            .tab button {
                display: block;
                background-color: inherit;
                color: black;
                padding: 22px 16px;
                width: 100%;
                border: none;
                outline: none;
                text-align: center;
                cursor: pointer;
                transition: 0.3s;
                font-size: 17px;
            }

                /* Change background color of buttons on hover */
                .tab button:hover {
                    background-color: #ddd;
                }

                /* Create an active/current "tab button" class */
                .tab button.active {
                    background-color: #ccc;
                }

        /* Style the tab content */
        .tabcontent {
            float: left;
            margin-bottom: 20px;
            padding: 10px;
            border: 1px solid #ccc;
            width: 85%;
            border-left: none;
            height: auto;
        }

        h3 {
            text-align: center;
            padding: 10px;
        }

        .tabcontent p {
            text-align: center;
            color: #FF3333;
        }

        .input-group p {
            font-weight: 700;
        }
    </style>

    <style>
        #show1, #show2, #local, #Parent, #Education, #Photo, #Declaration, #div1, #div2, #disabilitydesc, #SpCaredec {
            display: none;
        }

        .text-danger {
            font-weight: 700;
            color: red;
        }

        #SignaturePreview, #imagePreview {
            border: 1px solid black;
        }

        .control-label {
            text-align: center;
            font-weight: 700;
            margin: 10px;
        }

        .col-md-2 {
            text-align: center;
        }
    </style>

</head>
<body>
    <br />
    <br />
    <br />
    <br />


    <div class="tab">
        <button class="tablinks" onclick="openCity(event, 'Student')"><i class="fa fa-info fa-2x"></i><p><small>Student<br />Information</small></p> </button>
        <button class="tablinks" onclick="openCity(event, 'Parent')"><i class="fa fa-file-text-o fa-2x"></i><p><small>Parent<br />Information</small></p> </button>
        <button class="tablinks" onclick="openCity(event, 'Education')"><i class="fa fa-cogs fa-2x"></i><p><small>Educational<br />Qualification</small></p> </button>
        <button class="tablinks" onclick="openCity(event, 'Photo')"><i class="fa fa-file-image-o fa-2x"></i><p><small>Photo<br />Upload</small></p> </button>
        <button class="tablinks" onclick="openCity(event, 'Declaration')"><i class="fa fa-file fa-2x"></i><p><small>Upadte Student <br />Admission Status</small></p> </button>
    </div>

    @using (Html.BeginForm("", "", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Query_step, new { Value = "Step1" })




        <div id="Student" class="tabcontent">
            @if (TempData["msg"] != null)
            {
                <p class="alert alert-success" id="successMessage" style="color:#5cb85c;text-align:center">@TempData["msg"]</p>
            }
            <br />
            <h3>Student Information</h3>

            <div class="container">
                <div class="row">
                    <div class="col-sm-4">
                        <b>First Name</b>
                        <div class="input-group">

                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                            @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @class = "form-control" } })

                        </div>

                        @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })


                    </div>

                    <div class="col-sm-3">
                        <b>Middle Name</b>
                        <div class="input-group">

                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                            @Html.EditorFor(model => model.middle_name, new { htmlAttributes = new { @class = "form-control" } })

                        </div>

                        @Html.ValidationMessageFor(model => model.middle_name, "", new { @class = "text-danger" })


                    </div>

                    <div class="col-sm-4">
                        <b>Last Name</b>
                        <div class="input-group">

                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                            @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control" } })

                        </div>



                    </div>

                </div>

                <div class="row">
                    <div class="col-sm-6">
                        <b>Current Address1</b>
                        <div class="input-group">

                            <span class="input-group-addon"><i class="glyphicon glyphicon-road"></i></span>
                            @Html.EditorFor(model => model.CurrentAddress1, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.CurrentAddress1, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-sm-5">
                        <b>Current Address2</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-road"></i></span>
                            @Html.EditorFor(model => model.CurrentAddress2, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3">
                        <b>Country Name</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-globe"></i></span>
                            @Html.EditorFor(model => model.CountryName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                    </div>


                    <div class="col-sm-4">
                        <b>State Name</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-flag"></i></span>
                            @Html.EditorFor(model => model.StateName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>


                    </div>
                    <div class="col-sm-4">
                        <b>City Name</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-map-marker"></i></span>
                            @Html.EditorFor(model => model.CityName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3">
                        <b>Current Zipcode</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-road"></i></span>
                            @Html.EditorFor(model => model.currentzipcode, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>


                </div>

                <div class="row">
                    <div class="col-sm-11">
                        <div class="input-group">


                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6">
                        <b>Permanent Address1</b>
                        <div class="input-group">

                            <span class="input-group-addon"><i class="glyphicon glyphicon-road"></i></span>
                            @Html.EditorFor(model => model.PermanentAddress1, new { htmlAttributes = new { @class = "form-control" } })

                        </div>

                        @Html.ValidationMessageFor(model => model.PermanentAddress1, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-sm-5">
                        <b>Permanent Address2</b>
                        <div class="input-group">

                            <span class="input-group-addon"><i class="glyphicon glyphicon-road"></i></span>
                            @Html.EditorFor(model => model.PermanentAddress2, new { htmlAttributes = new { @class = "form-control" } })

                        </div>

                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3">
                        <b>Permanent Zipcode</b>
                        <div class="input-group">

                            <span class="input-group-addon"><i class="glyphicon glyphicon-road"></i></span>
                            @Html.EditorFor(model => model.permanentzipcode, new { htmlAttributes = new { @class = "form-control" } })

                        </div>



                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3">
                        <b>DOB</b>
                        <div class="input-group">

                            <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        </div>

                    </div>

                    <div class="col-sm-4">
                        <b>POB</b>
                        <div class="input-group">

                            <span class="input-group-addon"><i class="glyphicon glyphicon-road"></i></span>
                            @Html.EditorFor(model => model.POB, new { htmlAttributes = new { @class = "form-control" } })

                        </div>

                        @Html.ValidationMessageFor(model => model.POB, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-sm-4">
                        <b>BCN</b>
                        <div class="input-group">

                            <span class="input-group-addon"><i class="glyphicon glyphicon-road"></i></span>
                            @Html.EditorFor(model => model.BCN, new { htmlAttributes = new { @class = "form-control" } })

                        </div>



                    </div>


                </div>

                <div class="row">
                    <div class="col-sm-11">
                        <b>Birth Certificate </b>

                        <div class="input-group">

                            <!---    <a style="width:180px;" href="lnkfilepath_Click">@Model.BirthCertificate_Name</a>  -->
                            @if (@Model.BirthCertificatePath != null)
                            {

                                @Html.ActionLink(@Model.BirthCertificate_Name, "DownLoad", "SchoolAdmin", new { filenamee = @Model.BirthCertificatePath }, null)

                            }

                        </div>

        </div >

        </div >


<div class="row">

<div class="col-sm-3">
<b>Citizen Country</b>
<div class="input-group">
<span class="input-group-addon"><i class="glyphicon glyphicon-globe"></i></span>
                        @*   @Html.DropDownListFor(m => m.CitizenCountryId, Model.citizenCountry, "Please select Nationality", new { @class = "form-control" })      *@
                                                    @Html.EditorFor(model => model.CountryName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                    </div>

                    <div id="show1">
                        <div class="col-sm-4">
                            <b>IdProof Id</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                                @*     @Html.DropDownListFor(m => m.IdProof_Id, Model.IdProof_Type, "Please select Identity Proof Type", new { @class = "form-control", @onchange = " NoIdentity(this.value);" })    *@
                                @Html.EditorFor(model => model.IdProof_Name, new { htmlAttributes = new { @class = "form-control" } })
                            </div>


                        </div>

                        <div class="col-sm-4" id="IdProof_Number">
                            <b>IdProof Number</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.IdProof_Number, new { htmlAttributes = new { @class = "form-control" } })

                            </div>

                        </div>
                    </div>


                    <div id="show2">
                        <div class="col-sm-4">
                            <b>PassPort Number</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.PassPort_Number, new { htmlAttributes = new { @class = "form-control" } })

                            </div>

                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4">
                        <b>Blood Group </b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                            @*       @Html.DropDownListFor(m => m.BloodGroup_Id, Model.BloodGroup_Name, new { @class = "form-control" }) *@
                            @Html.EditorFor(model => model.PassPort_Number, new { htmlAttributes = new { @class = "form-control" } })
                        </div>


                    </div>
                    <div class="col-sm-4">
                        <b>Special Care Percentage</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>

                            @Html.EditorFor(model => model.Special_Care, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>

                    <div id="SpCaredec">
                        <div class="col-sm-3">
                            <b>SpecialCare Description</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Special_Care_Description, new { htmlAttributes = new { @class = "form-control" } })

                            </div>

                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-sm-4">
                        <b>Disability</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                            @Html.EditorFor(model => model.Disability, new { htmlAttributes = new { @class = "form-control" } })

                        </div>

                    </div>
                </div>

                <div id="disabilitydesc">
                    <div class="row">
                        <div class="col-sm-3">
                            <b>Disability Percentage</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Disability_Percentage, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="col-sm-4">
                            <b>Disability Description</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Disability_Description, new { htmlAttributes = new { @class = "form-control" } })

                            </div>

                        </div>
                        <div class="col-sm-4">
                            <b>Disability Certificate Number</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Disability_Certificate_Number, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-sm-11">

                            <b>Disability Certificate Path</b>
                            <div class="input-group">
                                <input type="file" name="DisabilityCertificateUpload" required="required" style="margin:10px;" />
                                @if (@Model.DisabilityCertificatePath != null && @Model.DisabilityCertificat_Name != null)
                                {
                                    @Html.ActionLink(@Model.DisabilityCertificat_Name, "DownLoad", "SchoolAdmin", new { filenamee = @Model.DisabilityCertificatePath }, null)

                                }
                            </div>
                        </div>
                    </div>


                </div>

            </div>

            <ul class="list-unstyled list-inline pull-right">
                <li><input type="submit" value="Next" class="btn btn-success" disabled onclick="javascript:return alert('Are you sure to Change Client Status')" /></li>
            </ul>

        </div>
        // }
    }

    @using (Html.BeginForm())
    {

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Query_step, new { Value = "Step2" })
        <div id="Parent" class="tabcontent">
            @if (TempData["msg"] != null)
            {
                <p class="alert alert-success" id="successMessage" style="color:#5cb85c;text-align:center">@TempData["msg"]</p>
            }
            <br />

            <h3>Parent Information</h3>
            <p>Please Fill Up All necessary Information mentioned in below Fields.</p>
            <div class="container">
                <div class="row">
                    <div class="col-sm-3">
                        <b>Father Name</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                            @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control", } })

                        </div>
                    </div>

                    <div class="col-sm-4">
                        <b>Father Contact Number</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                            @Html.EditorFor(model => model.FatherContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <b>Father Email</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                            @Html.EditorFor(model => model.FatherEmail, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>



                </div>
                <div class="row">
                    <div class="col-sm-3">
                        <b>Mother Name</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-phone"></i></span>
                            @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <b>Mother Contact Number</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-phone-alt"></i></span>
                            @Html.EditorFor(model => model.MotherContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <b>Mother Email</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                            @Html.EditorFor(model => model.MotherEmail, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4">
                        <b>Home Contact Number</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-phone-alt"></i></span>
                            @Html.EditorFor(model => model.HomeContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-sm-10" style="background-color:lavender;">
                        <div class="input-group">

                        </div>
                    </div>
                </div>

                <div class="row" id="local">
                    <div class="col-sm-3">
                        <b>Local Gurdian Name</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-phone-alt"></i></span>
                            @Html.EditorFor(model => model.LocalGurdianName, new { htmlAttributes = new { @class = "form-control" } })

                        </div>

                    </div>

                    <div class="col-sm-4">
                        <b>Local Gurdian Email</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-phone-alt"></i></span>
                            @Html.EditorFor(model => model.LocalGurdianEmail, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>

                    <div class="col-sm-4">
                        <b>Local Gurdian Phone</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-phone-alt"></i></span>
                            @Html.EditorFor(model => model.LocalGurdianPhone, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>
                </div>
            </div>
            <ul class="list-unstyled list-inline pull-right">
                <li><input type="submit" value="Next" class="btn btn-success" disabled onclick="javascript:return alert('Are you sure to Change Client Status')" /></li>
            </ul>
        </div>

    }


    @using (Html.BeginForm("", "", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Query_step, new { Value = "Step3" })
        <div id="Education" class="tabcontent">
            @if (TempData["msg"] != null)
            {
                <p class="alert alert-success" id="successMessage" style="color:#5cb85c;text-align:center">@TempData["msg"]</p>
            }
            <br />

            <h3>Educational Information</h3>

            <div class="container">

                <div class="row">
                    <div class="col-sm-3">
                    </div>

                    <div class="col-sm-4">
                        <b>Admission Class</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                            @*   @Html.DropDownListFor(m => m.AdmissionClass_Id, Model.AdmissionClass_Name, "Please Select A Class", new { @class = "form-control", @onchange = "Education(this.value);" })     *@
                            @Html.EditorFor(model => model.Class_Name, new { htmlAttributes = new { @class = "form-control" } })
                        </div>


                    </div>

                    <div class="col-sm-4">
                    </div>
                </div>


                <div class="row">

                    <div class="col-sm-4">
                        <b>Last School Name</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                            @Html.EditorFor(model => model.Last_School_Name, new { htmlAttributes = new { @class = "form-control" } })

                        </div>


                    </div>

                    <div class="col-sm-4">
                        <b>School Board Name</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                            @*  @Html.DropDownListFor(m => m.SchoolBoard_Id, Model.SchoolBoard_Name, "Please Select  School Board", new { @class = "form-control" })*@
                            @Html.EditorFor(model => model.Board_Name, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                    </div>

                    <div class="col-sm-3">
                        <b>Last School Year</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                            @Html.EditorFor(model => model.Last_School_Year, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>



                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <b>Last School Class</b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                            @Html.EditorFor(model => model.Last_School_Class, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>
                    <div class="col-sm-4">
                        <b>Transfer Certifiate Number </b>
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                            @Html.EditorFor(model => model.School_Transfer_Certifiate_Number, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-sm-11">

                        <b>Transfer Certifiate Number Path</b>
                        <div class="input-group">
                            @if (@Model.SchoolTransferCertificatePath != null && @Model.SchoolTransferCertificate_Name != null)
                            {
                                @Html.ActionLink(@Model.SchoolTransferCertificate_Name, "DownLoad", "SchoolAdmin", new { filenamee = @Model.SchoolTransferCertificatePath }, null)

                            }

                        </div>
                    </div>
                </div>


                <div id="div1">

                    <div class="row">
                        <div class="col-sm-4">
                            <b>Last School Exam Marks</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Last_School_Exam_Marks, new { htmlAttributes = new { @class = "form-control", @onchange = " ExamPercent(this.value);" } })

                            </div>

                        </div>

                        <div class="col-sm-4">
                            <b>Last School Exam Total Marks</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Last_School_Total_Marks, new { htmlAttributes = new { @class = "form-control", @onchange = " ExamPercent(this.value);" } })

                            </div>

                            @Html.ValidationMessageFor(model => model.Last_School_Total_Marks, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-sm-3">
                            <b>Last School Exam Marks Percentage</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                                @Html.EditorFor(model => model.Last_School_Marks_Percentage, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>


                    </div>

                    <div class="row">

                        <div class="col-sm-7">
                            <b>Final Exam Result Upload Path</b>
                            <div class="input-group">
                                @if (@Model.FinalExamResultPath != null && @Model.FinalExamResult_Name != null)
                                {
                                    @Html.ActionLink(@Model.FinalExamResult_Name, "DownLoad", "SchoolAdmin", new { filenamee = @Model.FinalExamResultPath }, null)

                                }
                            </div>

                        </div>
                    </div>

                </div>

                <div id="div2">
                    <div class="row">
                        <div class="col-sm-4">
                            <b>Board Exam Marks</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Board_Exam_Marks, new { htmlAttributes = new { @class = "form-control", @onchange = " BoardPercent(this.value);" } })

                            </div>
                        </div>
                        <div class="col-sm-4">
                            <b>Board Total Marks</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Board_Total_Marks, new { htmlAttributes = new { @class = "form-control", @onchange = " BoardPercent(this.value);" } })

                            </div>


                        </div>
                        <div class="col-sm-3">
                            <b>Marks Percentage</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                                @Html.EditorFor(model => model.Marks_Percentage, new { htmlAttributes = new { @class = "form-control", } })

                            </div>
                        </div>


                    </div>

                    <div class="row">
                        <div class="col-sm-4">
                            <b>Board Certificate Number</b>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                                @Html.EditorFor(model => model.Board_Certificate_Number, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="col-sm-7">
                            <b>Board Exam Certificate Path</b>
                            <div class="input-group">
                                @if (@Model.BoardExamCertificatePath != null && @Model.BoardExamCertificate_Name != null)
                                {
                                    @Html.ActionLink(@Model.BoardExamCertificate_Name, "DownLoad", "SchoolAdmin", new { filenamee = @Model.BoardExamCertificatePath }, null)

                                }
                            </div>
                        </div>

                    </div>
                    <div class="row">

                        <div class="col-sm-7">
                            <b>Board Exam Result Path</b>
                            <div class="input-group">
                                @if (@Model.BoardExamResultPath != null && @Model.BoardExamResultName != null)
                                {

                                    @Html.ActionLink(@Model.BoardExamResultName, "DownLoad", "SchoolAdmin", new { filenamee = @Model.BoardExamResultPath }, null)

                                }
                            </div>
                        </div>

                    </div>


                </div>


            </div>

            <ul class="list-unstyled list-inline pull-right">
                <li><input type="submit" value="Next" disabled class="btn btn-success" onclick="javascript:return alert('Are you sure to Change Client Status')" /></li>
            </ul>

        </div>

    }


    @using (Html.BeginForm("", "", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Query_step, new { Value = "Step4" })
        <div id="Photo" class="tabcontent">
            @if (TempData["msg"] != null)
            {
                <p class="alert alert-success" id="successMessage" style="color:#5cb85c;text-align:center">@TempData["msg"]</p>
            }
            <br />

            <h3>Photo & Signature Upload</h3>
        
            <div class="container">

                <div class="row">
                    <b>Image Path</b>
                </div>

                <div class="row">

                    <div class="col-sm-5">
                        @if (@Model.ImagePath != null)
                        {
                            
                            <img src="@Url.Content("~/AppFiles/Images/" + @Model.ImagePath)" style="margin:10px" height="200" width="200" id="imagePreview" />

                        }
                        else
                        {

                            <img src="@Url.Content("~/AppFiles/Images/" + @Model.ImagePath)" style="margin:10px" height="200" width="200" id="imagePreview" />}
 
                        @Html.ActionLink("Download Image", "DownLoad", "SchoolAdmin", new { filenamee = @Model.ImagePath }, null)

                    </div>


             

                </div>
                <div class="row">
                    <b>Signature Path</b>
                </div>

                <div class="row">

                    <div class="col-sm-5">
                        @if (@Model.SignaturePath != null)
                        {
                            
                            <img src="@Url.Content("~/AppFiles/Images/" + @Model.SignaturePath)" style="margin:10px" height="200" width="200" id="imagePreview" />

                        }
                        else
                        {

                            <img src="@Url.Content("~/AppFiles/Images/" + @Model.SignaturePath)" style="margin:10px;" height="200" width="200" id="SignaturePreview" />}

                       


                        @Html.ActionLink("Download Signature", "DownLoad", "SchoolAdmin", new { filenamee = @Model.SignaturePath }, null)
                    </div>

                    </div>


                </div>
                <ul class="list-unstyled list-inline pull-right">
                    <li><input type="submit" value="Next" disabled class="btn btn-success" onclick="javascript:return alert('Are you sure to Change Client Status')" /></li>
                </ul>
            </div>

        }

        @if (@Model.Application_Status == "Complete" || @Model.Application_Status == "Eligible-Interview")
        {

            using (Html.BeginForm("StudentEligilbiltystatus", "SchoolAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div id="Declaration" class="tabcontent">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Query_step, new { Value = "Step5" })

                    @if (TempData["msg"] != null)
                    {
                        <p class="alert alert-success" id="successMessage" style="color:#5cb85c;text-align:center">@TempData["msg"]</p>
                    }
                    <br />

                    <h3>Student Final Status Change</h3>

                    <div class="container">






                        @if (@Model.Application_Status == "Complete")
                        {

                            <input type="hidden" name="Student_Id" value="@Model.Student_Id" />

                            <div class="row">

                                <div class="col-sm-6">
                                    <label class="control-label col-sm-6"> Is Eligible for Interview <en>*</en> </label>

                                    <div class="col-sm-6">
                                        <select name="Application_Status" class="form-control" required>
                                            <option value="slect">Select Your Choice</option>
                                            <option value="Eligible-Interview">Eligible for InterView</option>
                                            <option value="In-Eligible-Interview">In-Elgible for Interview </option>


                                        </select>
                                    </div>

                                </div>
                            </div>

                        }

                        @if (@Model.Application_Status == "Eligible-Interview")
                        {

                            <input type="hidden" name="Student_Id" value="@Model.Student_Id" />

                            <div class="row">

                                <div class="col-sm-6">
                                    <label class="control-label col-sm-6"> Is Interview Complete <en>*</en> </label>

                                    <div class="col-sm-6">
                                        <select name="Application_Status" class="form-control" required>
                                            <option value="slect">Select Your Choice</option>
                                            <option value="Interview-Complete">  Interview Complete </option>
                                            <option value="Interview-In-Complete"> Interview In-Complete </option>


                                        </select>
                                    </div>

                                </div>
                            </div>

                        }




                     @*   @if (@Model.Application_Status == "Interview-Complete")
                        {

                            <input type="hidden" name="Student_Id" value="@Model.Student_Id" />

                            <div class="row">

                                <div class="col-sm-6">
                                    <label class="control-label col-sm-6"> Is Eligible for Admission <en>*</en> </label>

                                    <div class="col-sm-6">
                                        <select name="Application_Status" id="Application_Status" required onchange="myShowHide();" class="form-control">
                                            <option value="slect">Select Your Choice</option>
                                            <option value="Eligible-Admission">Eligible for Admission</option>
                                            <option value="In-Eligible-Admission">In-Elgible for Admission </option>


                                        </select>
                                    </div>

                                </div>
                            </div>




                            <div class="row" id="Admission_Eligible_div">
                                <div class="col-sm-12">

                                    <div class="col-sm-6">


                                        <label class="control-label col-sm-6">Interview Note :<em> * </em></label>

                                        <div class="input-group">

                                            <textarea class="form-control" name="interview_note" id="interview_note"></textarea>

                                        </div>


                                    </div>

                                    <div class="col-sm-5">




                                        <div class="input-group">
                                            <label class="control-label col-sm-6">Document List:</label>

                                            <input type="button" class="btn-success" id="add-row" value="Add More" />
                                            <br />
                                        </div>
                                        <table>
                                            <tbody></tbody>
                                        </table>
                                        <button type="button" class="delete-row">Delete Row</button>




                                    </div>
                                </div>

                            </div>





                        }*@



                    </div>

                    <ul class="list-unstyled list-inline pull-right">
                        <li><input type="submit" value="Submit" id="btn1" class="btn btn-success" onclick="javascript:return alert('Are you sure to Change Client Status')" /></li>
                    </ul>

                </div>

            }

        }



        @if (@Model.Application_Status == "Interview-Complete")
        {

            using (Html.BeginForm("UploadStudentAttachement", "SchoolAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div id="Declaration" class="tabcontent">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Query_step, new { Value = "Step5" })

                    @if (TempData["msg"] != null)
                    {
                        <p class="alert alert-success" id="successMessage" style="color:#5cb85c;text-align:center">@TempData["msg"]</p>
                    }
                    <br />

                    <h3>Student Final Status Change</h3>

                    <div class="container">


                        <input type="hidden" name="Student_Id" value="@Model.Student_Id" />

                        <div class="row">

                            <div class="col-sm-6">
                                <label class="control-label col-sm-6"> Is Eligible for Admission <en>*</en> </label>

                                <div class="col-sm-6">
                                    <select name="Application_Status" id="Application_Status" required onchange="myShowHide();" class="form-control">
                                        <option value="slect">Select Your Choice</option>
                                        <option value="Eligible-Admission">Eligible for Admission</option>
                                        <option value="In-Eligible-Admission">In-Elgible for Admission </option>


                                    </select>
                                </div>

                            </div>
                        </div>




                        <div class="row" id="Admission_Eligible_div">
                            <div class="col-sm-12">

                                <div class="col-sm-6">


                                    <label class="control-label col-sm-6">Interview Note :<em> * </em></label>

                                    <div class="input-group">

                                        <textarea class="form-control" name="interview_note" id="interview_note"></textarea>

                                    </div>


                                </div>

                                <div class="col-sm-5">




                                    <div class="input-group">
                                        <label class="control-label col-sm-6">Document List:</label>
                                        @*<a style="float: right;" id="add-row"><img width="16" height="16" src=@Url.Content("~/AppFiles/Images/pluse.png")></a>*@
                                        <input type="button" class="btn-success" id="add-row" value="Add More" />
                                        <br />
                                    </div>
                                    <table>
                                        <tbody></tbody>
                                    </table>
                                    <button type="button" class="delete-row">Delete Row</button>

                                </div>
                            </div>

                        </div>



                    </div>

                    <ul class="list-unstyled list-inline pull-right">
                        <li><input type="submit" value="Submit" id="btn1" class="btn btn-success" onclick="javascript:return alert('Are you sure to Change Client Status')" /></li>
                   
                    </ul>

                </div>

            }

        }


        @section Scripts
       {
            @Scripts.Render("~/bundles/jqueryval")


            @Styles.Render("~/Content/cssjqryUi")



            <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
            <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
            <script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
            <script src="http://maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>

            <script type="text/javascript" src="Scripts/jquery_calendar/jquery-ui.js"></script>
            <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
            <script>
                $(function () {
                    $(".datepicker").datepicker(
                        {
                            dateFormat: 'dd/mm/yy',
                            showStatus: true,
                            showWeeks: true,
                            highlightWeek: true,
                            numberOfMonths: 1,
                            showAnim: "scale",
                            showOptions: { origin: ["top", "left"] }
                        }
                    );
                });
            </script>




            <script type="text/javascript">

                function CheckColors(val) {

                    if (val == '1') {
                        $("#show1").show();
                        $("#show2").hide();
                    }
                    else {
                        $("#show2").show();
                        $("#show1").hide();

                    }
                }

                function Disable(val) {

                    if (val == '1') {

                        $("#disabilitydesc").show();

                    }
                    else {

                        $("#disabilitydesc").hide();

                    }
                }

                function SpCare(val) {

                    if (val == '1') {

                        $("#SpCaredec").show();

                    }
                    else {

                        $("#SpCaredec").hide();

                    }
                }

            </script>

            <script>
                function ShowImagePreview(imageUploader, previewImage) {
                    if (imageUploader.files && imageUploader.files[0]) {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            $(previewImage).attr('src', e.target.result);
                        }
                        reader.readAsDataURL(imageUploader.files[0]);
                    }
                }

                function ShowSignaturePreview(imageUploader, previewImage) {
                    if (imageUploader.files && imageUploader.files[0]) {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            $(previewImage).attr('src', e.target.result);
                        }
                        reader.readAsDataURL(imageUploader.files[0]);
                    }
                }

            </script>



        }

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.3/jquery.min.js"></script>
        <script src="//ajax.aspnetcdn.com/ajax/jquery.validate/1.13.1/jquery.validate.js"></script>
        <script src="//ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.js"></script>
        <script src="http://code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.css" rel="stylesheet">


        <script>
            var checkboxes = $("input[type='checkbox']"),
                Butt = $("input[type='']");

            checkboxes.click(function () {
                Butt.attr("disabled", !checkboxes.is(":checked"));
            });

        </script>
        <script>
            function openCity(evt, cityName) {
                var i, tabcontent, tablinks;
                tabcontent = document.getElementsByClassName("tabcontent");
                for (i = 0; i < tabcontent.length; i++) {
                    tabcontent[i].style.display = "none";
                }
                tablinks = document.getElementsByClassName("tablinks");
                for (i = 0; i < tablinks.length; i++) {
                    tablinks[i].className = tablinks[i].className.replace(" active", "");
                }
                document.getElementById(cityName).style.display = "block";
                evt.currentTarget.className += " active";
            }

        </script>
        <script>
            $(document).ready(function () {
                $('#Admission_Eligible_div').hide();

            });
            function myShowHide() {

                var myComment = $('#Application_Status').val();

                if (myComment == 'Eligible-Admission') {

                    $('#Admission_Eligible_div').show();

                    $('#interview_note').attr('required', 'true');

                    $('#interview_note').val('');

                } else {

                    $('#interview_note').attr('disabled', 'true');

                    $('#Admission_Eligible_div').hide();

                }

            }

            function doc_Attachment_generate() {
                var serial = $('#countAttachment').val();
                //  alert(serial);
                serial++;
                $.ajax({
                    url: '<?php echo BACKEND_URL?>employee/doc_Attachment',
                    type: 'POST',
                    data: { 'serial': serial },
                    success: function (data) {
                        //alert(data);
                        $('#Add_Attachment_div').show();
                        $('#Add_Attachment_div').append(data);
                        $('#countAttachment').val(serial);
                    },
                    error: function (e) { }
                });
            }

        </script>

        <script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
        <script type="text/javascript">
            $(document).ready(function () {
                var id = 0;
                $("#add-row").click(function () {
                    id++;

                    var markup = "<tr class='border_bottom'><input type='hidden' name='idvalue' value='" + id + "'/><td colspan='12'><input type='checkbox' name='record'></td>&nbsp;<td colspan='12'><label class='mylabel'>Attachment '" + id + "' :</label></td><td colspan='6'><input type='file' name='StudentfileUpload'></td></tr><br>";
                    $("table tbody").append(markup);
                });

                // Find and remove selected table rows
                $(".delete-row").click(function () {
                    $("table tbody").find('input[name="record"]').each(function () {
                        if ($(this).is(":checked")) {
                            $(this).parents("tr").remove();
                        }
                    });
                });
            });
        </script>

    </body>
    </html>
